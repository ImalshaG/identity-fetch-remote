DROP TABLE IF EXISTS IDN_REMOTE_FETCH_CONFIG CASCADE;
DROP SEQUENCE IF EXISTS IDN_REMOTE_FETCH_CONFIG_SEQ;
CREATE SEQUENCE IDN_REMOTE_FETCH_CONFIG_SEQ;
CREATE TABLE IDN_REMOTE_FETCH_CONFIG (
	ID INTEGER NOT NULL DEFAULT NEXTVAL('IDN_REMOTE_FETCH_CONFIG_SEQ'),
	TENANT_ID INTEGER NOT NULL,
	IS_ENABLED CHAR(1) NOT NULL,
	USER_NAME VARCHAR(255) NOT NULL,
	REPO_MANAGER_TYPE VARCHAR(255) NOT NULL,
	ACTION_LISTENER_TYPE VARCHAR(255) NOT NULL,
	CONFIG_DEPLOYER_TYPE VARCHAR(255) NOT NULL,
	REMOTE_FETCH_NAME VARCHAR(255),
	ATTRIBUTES_JSON TEXT NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT UC_CONFIG UNIQUE (REPO_MANAGER_TYPE,CONFIG_DEPLOYER_TYPE,TENANT_ID)
);

DROP TABLE IF EXISTS IDN_REMOTE_FETCH_REVISIONS;
DROP SEQUENCE IF EXISTS IDN_REMOTE_FETCH_REVISIONS_SEQ;
CREATE SEQUENCE IDN_REMOTE_FETCH_REVISIONS_SEQ;
CREATE TABLE IDN_REMOTE_FETCH_REVISIONS (
	ID INTEGER NOT NULL DEFAULT NEXTVAL('IDN_REMOTE_FETCH_REVISIONS_SEQ'),
	CONFIG_ID INTEGER NOT NULL,
	FILE_PATH VARCHAR(255) NOT NULL,
	FILE_HASH VARCHAR(255),
	DEPLOYED_DATE TIMESTAMP,
	DEPLOYMENT_STATUS VARCHAR(255),
	ITEM_NAME VARCHAR(255),
	PRIMARY KEY (ID),
	FOREIGN KEY (CONFIG_ID) REFERENCES IDN_REMOTE_FETCH_CONFIG(ID) ON DELETE CASCADE,
	CONSTRAINT UC_REVISIONS UNIQUE (CONFIG_ID,ITEM_NAME)
);